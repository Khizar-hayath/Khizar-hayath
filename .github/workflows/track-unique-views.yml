name: Track Daily Unique Views

on:
  schedule:
    - cron: '30 18 * * *'   # 18:30 UTC = 00:00 IST
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-uniques:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (allows pushing back)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Install jq
        run: sudo apt-get update -y && sudo apt-get install -y jq

      - name: Fetch views from GitHub Traffic API
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPO="${{ github.repository }}"
          echo "Fetching traffic/views for $REPO"
          # Fetch the views endpoint and save to a temp file (never expose token)
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$REPO/traffic/views" -o /tmp/views.json || true

          if [ -s /tmp/views.json ]; then
            echo "/tmp/views.json created and non-empty"
            # Print a short summary for logs (safe)
            jq -r '. | "count:\(.count) uniques:\(.uniques) days:\(.views|length)"' /tmp/views.json || true
          else
            echo "/tmp/views.json is missing or empty"
          fi

      - name: Ensure .github/traffic.json exists
        run: |
          mkdir -p .github
          if [ ! -f .github/traffic.json ]; then
            cat > .github/traffic.json <<'JSON'
{
  "total_daily_uniques_sum": 0,
  "last_processed": "1970-01-01T00:00:00Z"
}
JSON
            echo "Created initial .github/traffic.json"
          else
            echo ".github/traffic.json already exists"
          fi
          echo "Current .github/traffic.json:"
          cat .github/traffic.json

      - name: Compute new daily uniques and update file
        run: |
          LAST=$(jq -r '.last_processed' .github/traffic.json)
          echo "Last processed: $LAST"

          if [ ! -s /tmp/views.json ]; then
            echo "No views data available in /tmp/views.json â€” exiting without update."
            exit 0
          fi

          # Check the API returned a 'views' array
          if ! jq -e '.views' /tmp/views.json >/dev/null 2>&1; then
            echo "API response does not contain 'views' array. Response:"
            cat /tmp/views.json
            exit 0
          fi

          VIEWS_JSON=$(cat /tmp/views.json)

          # Sum 'uniques' for days strictly after LAST
          new_uniques=$(jq --arg last "$LAST" '[.views[] | select(.timestamp > $last) | .uniques] | add // 0' <<<"$VIEWS_JSON")
          new_uniques=${new_uniques:-0}
          echo "New uniques to add: $new_uniques"

          # Determine newest timestamp in returned views (if any)
          newest_ts=$(jq -r '[.views[] | .timestamp] | max // empty' <<<"$VIEWS_JSON")
          if [ -z "$newest_ts" ]; then
            NEW_LAST="$LAST"
          else
            NEW_LAST="$newest_ts"
          fi
          echo "New last_processed will be: $NEW_LAST"

          # Atomically update .github/traffic.json
          tmpfile=$(mktemp)
          jq --argjson nu "$new_uniques" --arg newlast "$NEW_LAST" \
            '.total_daily_uniques_sum += ($nu // 0) | .last_processed = $newlast' \
            .github/traffic.json > "$tmpfile" && mv "$tmpfile" .github/traffic.json

          echo "Updated .github/traffic.json:"
          cat .github/traffic.json

      - name: Commit and push changes if any
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .github/traffic.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update daily unique totals"
            git push
          fi
